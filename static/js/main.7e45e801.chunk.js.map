{"version":3,"sources":["components/LoadingContext/LoadingContext.tsx","types/FilterType.ts","components/Footer/Footer.tsx","types/Errors.ts","components/Header/Header.tsx","utils/fetchClient.ts","api/todos.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/Loader/Loader.tsx","App.tsx","index.tsx"],"names":["LoadingContext","createContext","isLoadingAll","setIsLoadingAll","isLoading","setIsLoading","LoadingProvider","_ref","children","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","loadingValueAll","loadingValue","_jsx","Provider","value","_objectSpread","FilterType","Footer","todos","filterType","setFilterType","handleClearCompleted","activeTodos","filter","todo","completed","length","_Fragment","_jsxs","className","concat","href","classNames","selected","ALL","onClick","ACTIVE","COMPLETED","type","style","visibility","some","Errors","Header","hasSomeTodos","onChangeIsError","onSubmitAddTodo","titleTodo","onChangeTitle","onToggleAll","active","every","onSubmit","e","preventDefault","trimStart","_unused","ADD","placeholder","onChange","target","request","url","delay","data","arguments","undefined","options","method","body","JSON","stringify","headers","Promise","resolve","setTimeout","then","fetch","response","ok","Error","json","client","deleteTodo","userId","todoId","updateTodo","changeTodos","changedTodos","map","find","changedTodo","id","updateTodoTitle","title","TodoItem","onDeleteTodo","onChangeTodo","isEditing","setIsEditing","newTitle","setNewTitle","_useState5","_useState6","useContext","handleDeleteTodo","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","t0","DELETE","finish","stop","apply","cancelEditing","updateTitle","_ref3","_callee2","_context2","abrupt","trim","UPDATE","handleBlur","_ref4","_callee3","_context3","handleToggle","_ref5","_callee4","_context4","event","onBlur","onKeyUp","key","autoFocus","onDoubleClick","TodoList","tempTodo","onDelete","LoadingSpinner","USER_ID","getFilteredTodos","App","setTodos","NONE","error","setError","_useState7","_useState8","setTitle","_useState9","_useState10","setTempTodo","_useState11","_useState12","uploadingTodos","setUploadingTodos","useEffect","catch","UPLOAD","visibleTodos","completedTodos","isToggleOnActive","handleError","handleAddTodo","newTodo","postedTodo","EMPTY","sent","_toConsumableArray","_x","_x2","completedTodoIds","all","updatedTodo","prevTodos","index","findIndex","updatedTodos","_x3","_x4","handleToggleAll","_callee5","idsToToggle","toggledTodos","_context5","hidden","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.7e45e801.chunk.js","sourcesContent":["import React, { ReactNode, createContext, useState } from 'react';\n\ntype LoadingProviderProps = {\n  // eslint-disable-next-line react/require-default-props\n  children?: ReactNode;\n};\n\nexport const LoadingContext = createContext<{\n  isLoadingAll: boolean;\n  setIsLoadingAll: React.Dispatch<React.SetStateAction<boolean>>;\n  isLoading: boolean;\n  setIsLoading: React.Dispatch<React.SetStateAction<boolean>>;\n}>({\n  isLoadingAll: false,\n  setIsLoadingAll: () => {},\n  isLoading: false,\n  setIsLoading: () => {},\n});\n\n// eslint-disable-next-line max-len\nexport const LoadingProvider: React.FC<LoadingProviderProps> = ({ children }) => {\n  const [isLoadingAll, setIsLoadingAll] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const loadingValueAll = {\n    isLoadingAll,\n    setIsLoadingAll,\n  };\n\n  const loadingValue = {\n    isLoading,\n    setIsLoading,\n  };\n\n  return (\n    <LoadingContext.Provider value={{ ...loadingValueAll, ...loadingValue }}>\n      {children}\n    </LoadingContext.Provider>\n  );\n};\n","// eslint-disable-next-line no-shadow\nexport enum FilterType {\n  NONE = '',\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { FilterType } from '../../types/FilterType';\n\ntype Props = {\n  todos: Todo[],\n  filterType: FilterType,\n  setFilterType: (option: FilterType) => void,\n  handleClearCompleted:\n  (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n};\n\nexport const Footer: React.FC<Props> = ({\n  todos,\n  filterType,\n  setFilterType,\n  handleClearCompleted,\n}) => {\n  const activeTodos = todos.filter(todo => !todo.completed).length;\n\n  return (\n    <>\n      <footer className=\"todoapp__footer\">\n        <span className=\"todo-count\">\n          {`${activeTodos} item${activeTodos !== 1 ? 's' : ''} left`}\n        </span>\n\n        <nav className=\"filter\">\n          <a\n            href=\"#/\"\n            className={classNames('filter__link',\n              { selected: filterType === FilterType.ALL })}\n            onClick={() => setFilterType(FilterType.ALL)}\n          >\n            All\n          </a>\n\n          <a\n            href=\"#/active\"\n            className={classNames('filter__link',\n              { selected: filterType === FilterType.ACTIVE })}\n            onClick={() => setFilterType(FilterType.ACTIVE)}\n          >\n            Active\n          </a>\n\n          <a\n            href=\"#/completed\"\n            className={classNames('filter__link',\n              { selected: filterType === FilterType.COMPLETED })}\n            onClick={() => setFilterType(FilterType.COMPLETED)}\n          >\n            Completed\n          </a>\n        </nav>\n\n        <button\n          type=\"button\"\n          className=\"todoapp__clear-completed\"\n          onClick={handleClearCompleted}\n          style={{\n            visibility: todos.some(todo => todo.completed)\n              ? 'visible' : 'hidden',\n          }}\n        >\n          Clear completed\n        </button>\n      </footer>\n    </>\n  );\n};\n","// eslint-disable-next-line no-shadow\nexport enum Errors {\n  NONE = '',\n  UPLOAD = 'Unable to upload todos',\n  ADD = 'Unable to add a todo',\n  DELETE = 'Unable to delete a todo',\n  UPDATE = 'Unable to update a todo',\n  EMPTY = 'Title can\\'t be empty',\n  NOUSER = 'Please, check your User Id',\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Errors } from '../../types/Errors';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  hasSomeTodos: boolean,\n  onChangeIsError: (e: Errors) => void,\n  onSubmitAddTodo: (value: string) => void,\n  onChangeTitle: (value: string) => void,\n  titleTodo: string,\n  onToggleAll: () => void,\n};\n\nexport const Header: React.FC<Props> = ({\n  todos,\n  hasSomeTodos,\n  onChangeIsError,\n  onSubmitAddTodo,\n  titleTodo,\n  onChangeTitle,\n  onToggleAll,\n}) => {\n  const handleFormSubmit = (e: React.SyntheticEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    try {\n      onSubmitAddTodo(titleTodo.trimStart());\n    } catch {\n      onChangeIsError(Errors.ADD);\n    }\n  };\n\n  return (\n    <header className=\"todoapp__header\">\n      {hasSomeTodos && (\n      // eslint-disable-next-line jsx-a11y/control-has-associated-label\n        <button\n          type=\"button\"\n          className={classNames('todoapp__toggle-all',\n            { active: todos.every(todo => !todo.completed) })}\n          onClick={onToggleAll}\n        />\n      )}\n\n      <form onSubmit={handleFormSubmit}>\n        <input\n          type=\"text\"\n          className=\"todoapp__new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={titleTodo}\n          onChange={(e) => (onChangeTitle(e.target.value))}\n        />\n      </form>\n    </header>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nconst BASE_URL = 'https://mate.academy/students-api';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null,\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","import { Todo } from '../types/Todo';\nimport { client } from '../utils/fetchClient';\n\nexport const getTodos = (userId: number) => {\n  return client.get<Todo[]>(`/todos?userId=${userId}`);\n};\n\nexport const postTodo = (userId: number, todo: Todo) => {\n  return client.post<Todo>(`/todos?userId=${userId}`, todo);\n};\n\nexport const deleteTodo = (userId: number, todoId: number) => {\n  return client.delete(`/todos/${todoId}?userId=${userId}`);\n};\n\nexport const updateTodo = (todoId: number, data: Partial<Todo>) => {\n  return client.patch<Todo>(`/todos/${todoId}`, data);\n};\n\nexport const changeTodos = (\n  todos: Todo[],\n  changedTodos: Todo[],\n): Todo[] => {\n  return todos.map(todo => {\n    const toggledTodo = changedTodos.find(changedTodo => (\n      changedTodo.id === todo.id\n    ));\n\n    return toggledTodo || todo;\n  });\n};\n\nexport const updateTodoTitle = (todoId: number, title: string) => {\n  return client.patch<Todo>(`/todos/${todoId}`, { title });\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable react/jsx-no-comment-textnodes */\nimport classNames from 'classnames';\nimport React, { useState, useContext } from 'react';\nimport { PatchedTodo, Todo } from '../../types/Todo';\nimport { Errors } from '../../types/Errors';\nimport { updateTodoTitle } from '../../api/todos';\nimport { LoadingContext } from '../LoadingContext/LoadingContext';\n\n  type Props = {\n    todo: Todo\n    onChangeIsError: (e: Errors) => void\n    onDeleteTodo: (todoId: number) => void\n    onChangeTodo:\n    (id: number, data: PatchedTodo) => void;\n  };\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  onChangeIsError,\n  onDeleteTodo,\n  onChangeTodo,\n}) => {\n  const { title } = todo;\n  const { id } = todo;\n\n  const [isEditing, setIsEditing] = useState(false);\n  const [newTitle, setNewTitle] = useState(title);\n  const [isLoading, setIsLoading] = useState(id === 0);\n  const { isLoadingAll } = useContext(LoadingContext);\n\n  const handleDeleteTodo = async () => {\n    try {\n      setIsLoading(true);\n      await onDeleteTodo(todo.id);\n    } catch {\n      onChangeIsError(Errors.DELETE);\n      setIsLoading(false);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleChangeTitle = () => {\n    setIsEditing(true);\n  };\n\n  const cancelEditing = () => {\n    setIsEditing(false);\n    setNewTitle(title);\n  };\n\n  const updateTitle = async () => {\n    if (newTitle === title) {\n      await cancelEditing();\n\n      return;\n    }\n\n    if (!newTitle.trim()) {\n      await onDeleteTodo(todo.id);\n\n      return;\n    }\n\n    try {\n      setIsLoading(true);\n      await updateTodoTitle(todo.id, newTitle);\n      setIsEditing(false);\n    } catch {\n      setIsEditing(true);\n      onChangeIsError(Errors.UPDATE);\n      setIsLoading(false);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    updateTitle();\n  };\n\n  const handleBlur = async () => {\n    setIsEditing(false);\n\n    if (newTitle !== title) {\n      updateTitle();\n    }\n  };\n\n  const handleEscape = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Escape') {\n      cancelEditing();\n    }\n  };\n\n  const handleToggle = async () => {\n    try {\n      setIsLoading(true);\n      await onChangeTodo(todo.id, { completed: !todo.completed });\n    } catch {\n      onChangeIsError(Errors.UPDATE);\n      setIsLoading(false);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <section className=\"todoapp__main\">\n        <div\n          className={classNames('todo', { completed: todo.completed })}\n        >\n          <label className=\"todo__status-label\">\n            <input\n              type=\"checkbox\"\n              className=\"todo__status\"\n              // eslint-disable-next-line max-len\n              onChange={handleToggle}\n            />\n          </label>\n\n          {isEditing ? (\n            <form onSubmit={handleSubmit}>\n              <input\n                type=\"text\"\n                className=\"todo__title todo__input\"\n                value={newTitle}\n                onChange={(event) => {\n                  setNewTitle(event.target.value);\n                }}\n                onBlur={handleBlur}\n                onKeyUp={handleEscape}\n                // eslint-disable-next-line jsx-a11y/no-autofocus\n                autoFocus\n              />\n            </form>\n          ) : (\n            <span className=\"todo__title\" onDoubleClick={handleChangeTitle}>\n              {newTitle}\n            </span>\n          )}\n\n          <button\n            type=\"button\"\n            className=\"todo__remove\"\n            onClick={handleDeleteTodo}\n          >\n            ×\n          </button>\n\n          <div className={classNames('modal overlay', {\n            'is-active': isLoading || isLoadingAll,\n          })}\n          >\n            <div className=\"modal-background has-background-white-ter\" />\n            <div className=\"loader\" />\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n","import React from 'react';\nimport { TodoItem } from '../TodoItem';\nimport { Todo, PatchedTodo } from '../../types/Todo';\nimport { Errors } from '../../types/Errors';\n\ntype Props = {\n  todos: Todo[];\n  tempTodo: Todo | null;\n  onChangeIsError: (e: Errors) => void\n  onDelete: (id: number) => void\n  onChangeTodo: (id: number, data: PatchedTodo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onChangeIsError,\n  tempTodo,\n  onDelete,\n  onChangeTodo,\n}) => {\n  return (\n    <div>\n      {todos.map((todo) => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          onChangeIsError={onChangeIsError}\n          onDeleteTodo={() => onDelete(todo.id)}\n          onChangeTodo={onChangeTodo}\n        />\n      ))}\n\n      {tempTodo && (\n        <TodoItem\n          key={tempTodo.id}\n          todo={tempTodo}\n          onChangeIsError={onChangeIsError}\n          onDeleteTodo={() => onDelete(tempTodo.id)}\n          onChangeTodo={onChangeTodo}\n        />\n      )}\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const LoadingSpinner = () => {\n  return (\n    <div className=\"spinner-container\">\n      <div className=\"loading-spinner\" />\n    </div>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport classNames from 'classnames';\nimport React, {\n  useEffect,\n  useState,\n  useContext,\n} from 'react';\nimport { Footer } from './components/Footer';\nimport { Header } from './components/Header';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { PatchedTodo, Todo } from './types/Todo';\nimport {\n  deleteTodo,\n  getTodos,\n  postTodo,\n  updateTodo,\n  changeTodos,\n} from './api/todos';\nimport { Errors } from './types/Errors';\nimport { FilterType } from './types/FilterType';\nimport {\n  LoadingContext,\n} from './components/LoadingContext/LoadingContext';\nimport { LoadingSpinner } from './components/Loader';\n\nconst USER_ID = 10209;\n\nconst getFilteredTodos = (todos: Todo[], filterType: string) => {\n  switch (filterType) {\n    case FilterType.ALL:\n      return todos;\n\n    case FilterType.ACTIVE:\n      return todos.filter((todo) => !todo.completed);\n\n    case FilterType.COMPLETED:\n      return todos.filter((todo) => todo.completed);\n\n    default:\n      return [];\n  }\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [error, setError] = useState<Errors>(Errors.NONE);\n  const [filterType, setFilterType] = useState<FilterType>(FilterType.ALL);\n  const [title, setTitle] = useState('');\n  const [tempTodo, setTempTodo] = useState<Todo | null>(null);\n  const [uploadingTodos, setUploadingTodos] = useState(false);\n\n  const { setIsLoadingAll } = useContext(LoadingContext);\n\n  const { setIsLoading } = useContext(LoadingContext);\n\n  useEffect(() => {\n    setUploadingTodos(true);\n    getTodos(USER_ID)\n      .then((response) => {\n        setTodos(response);\n        setUploadingTodos(false);\n      })\n      .catch(() => {\n        setError(Errors.UPLOAD);\n        setUploadingTodos(false);\n      });\n  }, []);\n\n  if (!USER_ID) {\n    setError(Errors.NOUSER);\n  }\n\n  const visibleTodos = getFilteredTodos(todos, filterType);\n  const completedTodos = getFilteredTodos(todos, FilterType.COMPLETED);\n  const isToggleOnActive = todos.length === completedTodos.length;\n\n  const handleError = (e: Errors) => {\n    setError(e);\n    setTimeout(() => {\n      setError(Errors.NONE);\n    }, 3000);\n  };\n\n  const handleAddTodo = async (value: string) => {\n    if (!value) {\n      setError(Errors.EMPTY);\n      setTimeout(() => {\n        setError(Errors.NONE);\n      }, 3000);\n\n      return;\n    }\n\n    const newTodo = {\n      id: 0,\n      userId: USER_ID,\n      title,\n      completed: false,\n    };\n\n    setTempTodo(newTodo);\n\n    const postedTodo = await postTodo(USER_ID, newTodo);\n\n    setTodos((prev) => {\n      return [...prev, postedTodo];\n    });\n    setTempTodo(null);\n    setTitle('');\n  };\n\n  const handleDeleteTodo = async (todoId: number) => {\n    setIsLoading(true);\n    await deleteTodo(USER_ID, todoId);\n    try {\n      setTodos(todos.filter(todo => todo.id !== todoId));\n    } catch {\n      setError(Errors.DELETE);\n      setIsLoading(false);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleClearCompleted = async () => {\n    const completedTodoIds = todos\n      .filter(todo => todo.completed)\n      .map(todo => todo.id);\n\n    try {\n      setIsLoadingAll(true);\n      await Promise.all(completedTodoIds.map(id => deleteTodo(USER_ID, id)));\n      setTodos(todos.filter(todo => !todo.completed));\n    } catch {\n      setError(Errors.DELETE);\n      setIsLoadingAll(false);\n    } finally {\n      setIsLoadingAll(false);\n    }\n  };\n\n  const handleToggle = async (id: number, data: PatchedTodo) => {\n    try {\n      const updatedTodo = await updateTodo(id, data);\n\n      setTodos((prevTodos) => {\n        const index = prevTodos.findIndex((todo) => todo.id === id);\n\n        if (index === -1) {\n          return prevTodos;\n        }\n\n        const updatedTodos = [...prevTodos];\n\n        updatedTodos[index] = updatedTodo;\n\n        return updatedTodos;\n      });\n    } catch {\n      setError(Errors.UPDATE);\n    }\n  };\n\n  const handleToggleAll = async () => {\n    try {\n      setIsLoadingAll(true);\n      const idsToToggle = todos\n        .filter(todo => (todo.completed === isToggleOnActive))\n        .map(todo => todo.id);\n\n      const toggledTodos = await Promise.all(\n        idsToToggle.map(id => updateTodo(id, { completed: !isToggleOnActive })),\n      );\n\n      setTodos(changeTodos(todos, toggledTodos));\n    } catch {\n      setError(Errors.UPDATE);\n      setIsLoadingAll(false);\n    } finally {\n      setIsLoadingAll(false);\n    }\n  };\n\n  return (\n    <div className=\"todoapp\">\n      <h1 className=\"todoapp__title\">todos</h1>\n\n      <div className=\"todoapp__content\">\n        <Header\n          todos={visibleTodos}\n          hasSomeTodos={!!todos.length}\n          onChangeIsError={handleError}\n          onSubmitAddTodo={handleAddTodo}\n          titleTodo={title}\n          onChangeTitle={setTitle}\n          onToggleAll={handleToggleAll}\n        />\n        {uploadingTodos ? (<LoadingSpinner />\n        ) : (\n          <TodoList\n            tempTodo={tempTodo}\n            todos={visibleTodos}\n            onChangeIsError={handleError}\n            onDelete={handleDeleteTodo}\n            onChangeTodo={handleToggle}\n          />\n        )}\n\n        {!!todos.length && (\n          <Footer\n            todos={visibleTodos}\n            filterType={filterType}\n            setFilterType={setFilterType}\n            handleClearCompleted={handleClearCompleted}\n          />\n        )}\n      </div>\n\n      {error\n        && (\n          <div\n            className={\n              classNames(\n                'notification is-danger is-light has-text-weight-normal',\n                { hidden: !error },\n              )\n            }\n          >\n            <button\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setError(Errors.NONE)}\n            />\n            {error}\n          </div>\n        )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport {\n  LoadingProvider,\n} from './components/LoadingContext/LoadingContext';\n\nimport 'bulma/css/bulma.min.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './styles/index.scss';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <LoadingProvider>\n      <App />\n    </LoadingProvider>,\n  );\n"],"sourceRoot":""}